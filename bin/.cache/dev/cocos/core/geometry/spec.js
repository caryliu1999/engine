(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports);
    global.spec = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ERaycastMode = void 0;

  /**
   * @category geometry
   */

  /**
   * @en
   * The raycast mode.
   * @zh 
   * 射线检测模式。
   */
  var ERaycastMode;
  /**
   * @en
   * The storage structure of the raycast results.
   * @zh
   * 射线检测结果的存储结构。
   */

  _exports.ERaycastMode = ERaycastMode;

  (function (ERaycastMode) {
    ERaycastMode[ERaycastMode["ALL"] = 0] = "ALL";
    ERaycastMode[ERaycastMode["CLOSEST"] = 1] = "CLOSEST";
    ERaycastMode[ERaycastMode["ANY"] = 2] = "ANY";
  })(ERaycastMode || (_exports.ERaycastMode = ERaycastMode = {}));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImU6L2QwMDQ1MjUyMC9HaXRodWIvZW5naW5lL2NvY29zL2NvcmUvZ2VvbWV0cnkvc3BlYy50cyJdLCJuYW1lcyI6WyJFUmF5Y2FzdE1vZGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7QUFJQTs7Ozs7O01BTVlBLFk7QUEyQlo7Ozs7Ozs7OzthQTNCWUEsWTtBQUFBQSxJQUFBQSxZLENBQUFBLFk7QUFBQUEsSUFBQUEsWSxDQUFBQSxZO0FBQUFBLElBQUFBLFksQ0FBQUEsWTtLQUFBQSxZLDZCQUFBQSxZIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBjYXRlZ29yeSBnZW9tZXRyeVxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBAZW5cclxuICogVGhlIHJheWNhc3QgbW9kZS5cclxuICogQHpoIFxyXG4gKiDlsITnur/mo4DmtYvmqKHlvI/jgIJcclxuICovXHJcbmV4cG9ydCBlbnVtIEVSYXljYXN0TW9kZSB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAZW5cclxuICAgICAqIERldGVjdCBhbmQgcmVjb3JkIGFsbCBkYXRhLlxyXG4gICAgICogQHpoXHJcbiAgICAgKiDmo4DmtYvlubborrDlvZXmiYDmnInnmoTmlbDmja7jgIJcclxuICAgICAqL1xyXG4gICAgQUxMLFxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQGVuXHJcbiAgICAgKiBEZXRlY3QgYWxsLCBidXQgcmVjb3JkIG9ubHkgdGhlIG1vc3QgcmVjZW50IGRhdGEuXHJcbiAgICAgKiBAemhcclxuICAgICAqIOajgOa1i+aJgOacie+8jOS9huWPquiusOW9leacgOi/keeahOaVsOaNruOAglxyXG4gICAgICovXHJcbiAgICBDTE9TRVNULFxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQGVuXHJcbiAgICAgKiBPbmNlIHRoZSB0ZXN0IGlzIHN1Y2Nlc3NmdWwsIHRoZSB0ZXN0IGlzIHN0b3BwZWQgYW5kIHRoZSBkYXRhIGlzIHJlY29yZGVkIG9ubHkgb25jZS5cclxuICAgICAqIEB6aFxyXG4gICAgICog5LiA5pem5qOA5rWL5oiQ5Yqf5bCx5YGc5q2i5qOA5rWL77yM5Y+q5Lya6K6w5b2V5LiA5qyh5pWw5o2u44CCXHJcbiAgICAgKi9cclxuICAgIEFOWSxcclxufVxyXG5cclxuLyoqXHJcbiAqIEBlblxyXG4gKiBUaGUgc3RvcmFnZSBzdHJ1Y3R1cmUgb2YgdGhlIHJheWNhc3QgcmVzdWx0cy5cclxuICogQHpoXHJcbiAqIOWwhOe6v+ajgOa1i+e7k+aenOeahOWtmOWCqOe7k+aehOOAglxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBJUmF5U3ViTWVzaFJlc3VsdCB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAZW5cclxuICAgICAqIFRoZSBkaXN0YW5jZSBiZXR3ZWVuIHRoZSBoaXQgcG9pbnQgYW5kIHRoZSByYXkuXHJcbiAgICAgKiBAemhcclxuICAgICAqIOWHu+S4reeCueWSjOWwhOe6v+eahOi3neemu+OAglxyXG4gICAgICovXHJcbiAgICBkaXN0YW5jZTogbnVtYmVyO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQGVuXHJcbiAgICAgKiBUaGUgaW5kZXggb2YgdGhlIHRyaWFuZ2xlIHZlcnRleCAw44CCXHJcbiAgICAgKiBAemhcclxuICAgICAqIOS4ieinkuW9oumhtueCuTDnmoTntKLlvJXjgIJcclxuICAgICAqL1xyXG4gICAgdmVydGV4SW5kZXgwOiBudW1iZXI7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAZW5cclxuICAgICAqIFRoZSBpbmRleCBvZiB0aGUgdHJpYW5nbGUgdmVydGV4IDHjgIJcclxuICAgICAqIEB6aFxyXG4gICAgICog5LiJ6KeS5b2i6aG254K5MeeahOe0ouW8lVxyXG4gICAgICovXHJcbiAgICB2ZXJ0ZXhJbmRleDE6IG51bWJlcjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEBlblxyXG4gICAgICogVGhlIGluZGV4IG9mIHRoZSB0cmlhbmdsZSB2ZXJ0ZXggMuOAglxyXG4gICAgICogQHpoXHJcbiAgICAgKiDkuInop5LlvaLpobbngrky55qE57Si5byVXHJcbiAgICAgKi9cclxuICAgIHZlcnRleEluZGV4MjogbnVtYmVyO1xyXG59XHJcblxyXG4vKipcclxuICogQGVuXHJcbiAqIFRoZSBvcHRpb25hbCBwYXJhbSBzdHJ1Y3R1cmUgb2YgdGhlIGByYXlfc3ViTWVzaGAuXHJcbiAqIEB6aFxyXG4gKiBgcmF5X3N1Yk1lc2hg55qE5Y+v6YCJ5Y+C5pWw57uT5p6E44CCXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIElSYXlTdWJNZXNoT3B0aW9ucyB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAZW5cclxuICAgICAqIFRoZSByYXljYXN0IG1vZGXvvIxgQU5ZYCBieSBkZWZhdWx0LlxyXG4gICAgICogQHpoXHJcbiAgICAgKiDlsITnur/mo4DmtYvmqKHlvI/vvJpbMCwgMSwgMl09PltgQUxMYCwgYENMT1NFU1RgLCBgQU5ZYF1cclxuICAgICAqL1xyXG4gICAgbW9kZTogRVJheWNhc3RNb2RlO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQGVuXHJcbiAgICAgKiBUaGUgbWF4aW11bSBkaXN0YW5jZSBvZiB0aGUgcmF5Y2FzdCwgYEluZmluaXR5YCBieSBkZWZhdWx0LlxyXG4gICAgICogQHpoXHJcbiAgICAgKiDlsITnur/mo4DmtYvnmoTmnIDlpKfot53nprvvvIzpu5jorqTkuLpgSW5maW5pdHlg44CCXHJcbiAgICAgKi9cclxuICAgIGRpc3RhbmNlOiBudW1iZXI7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAZW5cclxuICAgICAqIEFuIGFycmF5IHVzZWQgdG8gc3RvcmUgdGhlIHJlc3VsdHMgb2YgYSByYXkgZGV0ZWN0aW9uLlxyXG4gICAgICogQHpoXHJcbiAgICAgKiDnlKjkuo7lrZjlgqjlsITnur/mo4DmtYvnu5PmnpznmoTmlbDnu4TjgIJcclxuICAgICAqL1xyXG4gICAgcmVzdWx0PzogSVJheVN1Yk1lc2hSZXN1bHRbXTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEBlblxyXG4gICAgICogV2hldGhlciB0byBkZXRlY3QgdGhlIGRvdWJsZS1zaWRlZCBvciBub3TvvIxgZmFsc2VgIGJ5IGRlZmF1bHQuXHJcbiAgICAgKiBAemhcclxuICAgICAqIOaYr+WQpuajgOa1i+WPjOmdou+8jOm7mOiupOS4umBmYWxzZWDjgIJcclxuICAgICAqL1xyXG4gICAgZG91YmxlU2lkZWQ/OiBib29sZWFuO1xyXG59XHJcblxyXG4vKipcclxuICogQGVuXHJcbiAqIFRoZSBvcHRpb25hbCBwYXJhbSBzdHJ1Y3R1cmUgb2YgdGhlIGByYXlfbWVzaGAuXHJcbiAqIEB6aFxyXG4gKiBgcmF5X21lc2hg55qE5Y+v6YCJ5Y+C5pWw57uT5p6E44CCXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIElSYXlNZXNoT3B0aW9ucyBleHRlbmRzIElSYXlTdWJNZXNoT3B0aW9ucyB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAZW5cclxuICAgICAqIFRoZSBpbmRleCBvZiB0aGUgc3ViIG1lc2guXHJcbiAgICAgKiBAemhcclxuICAgICAqIOWtkOe9keagvOeahOe0ouW8leOAglxyXG4gICAgICovXHJcbiAgICBzdWJJbmRpY2VzPzogbnVtYmVyW107XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAZW5cclxuICogVGhlIG9wdGlvbmFsIHBhcmFtIHN0cnVjdHVyZSBvZiB0aGUgYHJheV9tb2RlbGAuXHJcbiAqIEB6aFxyXG4gKiBgcmF5X21vZGVsYOeahOWPr+mAieWPguaVsOe7k+aehOOAglxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBJUmF5TW9kZWxPcHRpb25zIGV4dGVuZHMgSVJheU1lc2hPcHRpb25zIHtcclxufSJdfQ==