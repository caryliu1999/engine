(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports);
    global.easing = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.constant = constant;
  _exports.linear = linear;
  _exports.quadIn = quadIn;
  _exports.quadOut = quadOut;
  _exports.quadInOut = quadInOut;
  _exports.cubicIn = cubicIn;
  _exports.cubicOut = cubicOut;
  _exports.cubicInOut = cubicInOut;
  _exports.quartIn = quartIn;
  _exports.quartOut = quartOut;
  _exports.quartInOut = quartInOut;
  _exports.quintIn = quintIn;
  _exports.quintOut = quintOut;
  _exports.quintInOut = quintInOut;
  _exports.sineIn = sineIn;
  _exports.sineOut = sineOut;
  _exports.sineInOut = sineInOut;
  _exports.expoIn = expoIn;
  _exports.expoOut = expoOut;
  _exports.expoInOut = expoInOut;
  _exports.circIn = circIn;
  _exports.circOut = circOut;
  _exports.circInOut = circInOut;
  _exports.elasticIn = elasticIn;
  _exports.elasticOut = elasticOut;
  _exports.elasticInOut = elasticInOut;
  _exports.backIn = backIn;
  _exports.backOut = backOut;
  _exports.backInOut = backInOut;
  _exports.bounceIn = bounceIn;
  _exports.bounceOut = bounceOut;
  _exports.bounceInOut = bounceInOut;
  _exports.smooth = smooth;
  _exports.fade = fade;
  _exports.bounceOutIn = _exports.backOutIn = _exports.elasticOutIn = _exports.circOutIn = _exports.expoOutIn = _exports.sineOutIn = _exports.quintOutIn = _exports.quartOutIn = _exports.cubicOutIn = _exports.quadOutIn = void 0;

  /**
   * @category animation
   */
  function constant() {
    return 0;
  }

  function linear(k) {
    return k;
  }

  function quadIn(k) {
    return k * k;
  }

  function quadOut(k) {
    return k * (2 - k);
  }

  function quadInOut(k) {
    k *= 2;

    if (k < 1) {
      return 0.5 * k * k;
    }

    return -0.5 * (--k * (k - 2) - 1);
  }

  function cubicIn(k) {
    return k * k * k;
  }

  function cubicOut(k) {
    return --k * k * k + 1;
  }

  function cubicInOut(k) {
    k *= 2;

    if (k < 1) {
      return 0.5 * k * k * k;
    }

    return 0.5 * ((k -= 2) * k * k + 2);
  }

  function quartIn(k) {
    return k * k * k * k;
  }

  function quartOut(k) {
    return 1 - --k * k * k * k;
  }

  function quartInOut(k) {
    k *= 2;

    if (k < 1) {
      return 0.5 * k * k * k * k;
    }

    return -0.5 * ((k -= 2) * k * k * k - 2);
  }

  function quintIn(k) {
    return k * k * k * k * k;
  }

  function quintOut(k) {
    return --k * k * k * k * k + 1;
  }

  function quintInOut(k) {
    k *= 2;

    if (k < 1) {
      return 0.5 * k * k * k * k * k;
    }

    return 0.5 * ((k -= 2) * k * k * k * k + 2);
  }

  function sineIn(k) {
    return 1 - Math.cos(k * Math.PI / 2);
  }

  function sineOut(k) {
    return Math.sin(k * Math.PI / 2);
  }

  function sineInOut(k) {
    return 0.5 * (1 - Math.cos(Math.PI * k));
  }

  function expoIn(k) {
    return k === 0 ? 0 : Math.pow(1024, k - 1);
  }

  function expoOut(k) {
    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);
  }

  function expoInOut(k) {
    if (k === 0) {
      return 0;
    }

    if (k === 1) {
      return 1;
    }

    k *= 2;

    if (k < 1) {
      return 0.5 * Math.pow(1024, k - 1);
    }

    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);
  }

  function circIn(k) {
    return 1 - Math.sqrt(1 - k * k);
  }

  function circOut(k) {
    return Math.sqrt(1 - --k * k);
  }

  function circInOut(k) {
    k *= 2;

    if (k < 1) {
      return -0.5 * (Math.sqrt(1 - k * k) - 1);
    }

    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);
  }

  function elasticIn(k) {
    var s;
    var a = 0.1;
    var p = 0.4;

    if (k === 0) {
      return 0;
    }

    if (k === 1) {
      return 1;
    }

    if (!a || a < 1) {
      a = 1;
      s = p / 4;
    } else {
      s = p * Math.asin(1 / a) / (2 * Math.PI);
    }

    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));
  }

  function elasticOut(k) {
    var s;
    var a = 0.1;
    var p = 0.4;

    if (k === 0) {
      return 0;
    }

    if (k === 1) {
      return 1;
    }

    if (!a || a < 1) {
      a = 1;
      s = p / 4;
    } else {
      s = p * Math.asin(1 / a) / (2 * Math.PI);
    }

    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;
  }

  function elasticInOut(k) {
    var s;
    var a = 0.1;
    var p = 0.4;

    if (k === 0) {
      return 0;
    }

    if (k === 1) {
      return 1;
    }

    if (!a || a < 1) {
      a = 1;
      s = p / 4;
    } else {
      s = p * Math.asin(1 / a) / (2 * Math.PI);
    }

    k *= 2;

    if (k < 1) {
      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));
    }

    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;
  }

  function backIn(k) {
    var s = 1.70158;
    return k * k * ((s + 1) * k - s);
  }

  function backOut(k) {
    var s = 1.70158;
    return --k * k * ((s + 1) * k + s) + 1;
  }

  function backInOut(k) {
    var s = 1.70158 * 1.525;
    k *= 2;

    if (k < 1) {
      return 0.5 * (k * k * ((s + 1) * k - s));
    }

    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);
  }

  function bounceIn(k) {
    return 1 - bounceOut(1 - k);
  }

  function bounceOut(k) {
    if (k < 1 / 2.75) {
      return 7.5625 * k * k;
    } else if (k < 2 / 2.75) {
      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;
    } else if (k < 2.5 / 2.75) {
      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;
    } else {
      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;
    }
  }

  function bounceInOut(k) {
    if (k < 0.5) {
      return bounceIn(k * 2) * 0.5;
    }

    return bounceOut(k * 2 - 1) * 0.5 + 0.5;
  }

  function smooth(k) {
    if (k <= 0) {
      return 0;
    }

    if (k >= 1) {
      return 1;
    }

    return k * k * (3 - 2 * k);
  }

  function fade(k) {
    if (k <= 0) {
      return 0;
    }

    if (k >= 1) {
      return 1;
    }

    return k * k * k * (k * (k * 6 - 15) + 10);
  }

  var quadOutIn = _makeOutIn(quadIn, quadOut);

  _exports.quadOutIn = quadOutIn;

  var cubicOutIn = _makeOutIn(cubicIn, cubicOut);

  _exports.cubicOutIn = cubicOutIn;

  var quartOutIn = _makeOutIn(quartIn, quartOut);

  _exports.quartOutIn = quartOutIn;

  var quintOutIn = _makeOutIn(quintIn, quintOut);

  _exports.quintOutIn = quintOutIn;

  var sineOutIn = _makeOutIn(sineIn, sineOut);

  _exports.sineOutIn = sineOutIn;

  var expoOutIn = _makeOutIn(expoIn, expoOut);

  _exports.expoOutIn = expoOutIn;

  var circOutIn = _makeOutIn(circIn, circOut);

  _exports.circOutIn = circOutIn;

  var elasticOutIn = _makeOutIn(elasticIn, elasticOut);

  _exports.elasticOutIn = elasticOutIn;

  var backOutIn = _makeOutIn(backIn, backOut);

  _exports.backOutIn = backOutIn;

  var bounceOutIn = _makeOutIn(bounceIn, bounceOut);

  _exports.bounceOutIn = bounceOutIn;

  function _makeOutIn(fnIn, fnOut) {
    return function (k) {
      if (k < 0.5) {
        return fnOut(k * 2) / 2;
      }

      return fnIn(2 * k - 1) / 2 + 0.5;
    };
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,