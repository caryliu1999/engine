(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports);
    global.defaultConstants = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SUPPORT_JIT = _exports.VIVO = _exports.OPPO = _exports.HUAWEI = _exports.COCOSPLAY = _exports.BAIDU = _exports.BYTEDANCE = _exports.XIAOMI = _exports.ALIPAY = _exports.RUNTIME_BASED = _exports.MINIGAME = _exports.WECHAT = _exports.JSB = _exports.DEBUG = _exports.DEV = _exports.PREVIEW = _exports.EDITOR = _exports.TEST = _exports.BUILD = void 0;

  function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

  var _global = typeof window === 'undefined' ? global : window;

  function defined(name) {
    return _typeof(_global[name]) === 'object';
  }

  function tryDefineGlobal(name, value) {
    if (typeof _global[name] === 'undefined') {
      return _global[name] = value;
    } else {
      return _global[name];
    }
  }

  var BUILD = tryDefineGlobal('CC_BUILD', false);
  _exports.BUILD = BUILD;
  var TEST = tryDefineGlobal('CC_TEST', defined('tap') || defined('QUnit'));
  _exports.TEST = TEST;
  var EDITOR = tryDefineGlobal('CC_EDITOR', defined('Editor') && defined('process') && 'electron' in process.versions);
  _exports.EDITOR = EDITOR;
  var PREVIEW = tryDefineGlobal('CC_PREVIEW', !EDITOR);
  _exports.PREVIEW = PREVIEW;
  var DEV = tryDefineGlobal('CC_DEV', true); // (CC_EDITOR && !CC_BUILD) || CC_PREVIEW || CC_TEST

  _exports.DEV = DEV;
  var DEBUG = tryDefineGlobal('CC_DEBUG', true); // CC_DEV || Debug Build

  _exports.DEBUG = DEBUG;
  var JSB = tryDefineGlobal('CC_JSB', defined('jsb')); // @ts-ignore

  _exports.JSB = JSB;
  var WECHAT = tryDefineGlobal('CC_WECHAT', !!(defined('wx') && (wx.getSystemInfoSync || wx.getSharedCanvas)));
  _exports.WECHAT = WECHAT;
  var MINIGAME = tryDefineGlobal('CC_MINIGAME', false);
  _exports.MINIGAME = MINIGAME;
  var RUNTIME_BASED = tryDefineGlobal('CC_RUNTIME_BASED', false);
  _exports.RUNTIME_BASED = RUNTIME_BASED;
  var ALIPAY = tryDefineGlobal('CC_ALIPAY', false);
  _exports.ALIPAY = ALIPAY;
  var XIAOMI = tryDefineGlobal('CC_XIAOMI', false);
  _exports.XIAOMI = XIAOMI;
  var BYTEDANCE = tryDefineGlobal('CC_BYTEDANCE', false);
  _exports.BYTEDANCE = BYTEDANCE;
  var BAIDU = tryDefineGlobal('CC_BAIDU', false);
  _exports.BAIDU = BAIDU;
  var COCOSPLAY = tryDefineGlobal('CC_COCOSPLAY', false);
  _exports.COCOSPLAY = COCOSPLAY;
  var HUAWEI = tryDefineGlobal('CC_HUAWEI', false);
  _exports.HUAWEI = HUAWEI;
  var OPPO = tryDefineGlobal('CC_OPPO', false);
  _exports.OPPO = OPPO;
  var VIVO = tryDefineGlobal('CC_VIVO', false); // @ts-ignore

  _exports.VIVO = VIVO;
  var SUPPORT_JIT = tryDefineGlobal('CC_SUPPORT_JIT', 'function' === typeof loadRuntime);
  _exports.SUPPORT_JIT = SUPPORT_JIT;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImU6L2QwMDQ1MjUyMC9HaXRodWIvZW5naW5lL2NvY29zL2NvcmUvZGVmYXVsdC1jb25zdGFudHMudHMiXSwibmFtZXMiOlsiX2dsb2JhbCIsIndpbmRvdyIsImdsb2JhbCIsImRlZmluZWQiLCJuYW1lIiwidHJ5RGVmaW5lR2xvYmFsIiwidmFsdWUiLCJCVUlMRCIsIlRFU1QiLCJFRElUT1IiLCJwcm9jZXNzIiwidmVyc2lvbnMiLCJQUkVWSUVXIiwiREVWIiwiREVCVUciLCJKU0IiLCJXRUNIQVQiLCJ3eCIsImdldFN5c3RlbUluZm9TeW5jIiwiZ2V0U2hhcmVkQ2FudmFzIiwiTUlOSUdBTUUiLCJSVU5USU1FX0JBU0VEIiwiQUxJUEFZIiwiWElBT01JIiwiQllURURBTkNFIiwiQkFJRFUiLCJDT0NPU1BMQVkiLCJIVUFXRUkiLCJPUFBPIiwiVklWTyIsIlNVUFBPUlRfSklUIiwibG9hZFJ1bnRpbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxNQUFNQSxPQUFPLEdBQUcsT0FBT0MsTUFBUCxLQUFrQixXQUFsQixHQUFnQ0MsTUFBaEMsR0FBeUNELE1BQXpEOztBQUVBLFdBQVNFLE9BQVQsQ0FBa0JDLElBQWxCLEVBQWdDO0FBQzVCLFdBQU8sUUFBT0osT0FBTyxDQUFDSSxJQUFELENBQWQsTUFBeUIsUUFBaEM7QUFDSDs7QUFFRCxXQUFTQyxlQUFULENBQTBCRCxJQUExQixFQUF3Q0UsS0FBeEMsRUFBaUU7QUFDN0QsUUFBSSxPQUFPTixPQUFPLENBQUNJLElBQUQsQ0FBZCxLQUF5QixXQUE3QixFQUEwQztBQUN0QyxhQUFRSixPQUFPLENBQUNJLElBQUQsQ0FBUCxHQUFnQkUsS0FBeEI7QUFDSCxLQUZELE1BRU87QUFDSCxhQUFPTixPQUFPLENBQUNJLElBQUQsQ0FBZDtBQUNIO0FBQ0o7O0FBRU0sTUFBTUcsS0FBSyxHQUFHRixlQUFlLENBQUMsVUFBRCxFQUFhLEtBQWIsQ0FBN0I7O0FBQ0EsTUFBTUcsSUFBSSxHQUFHSCxlQUFlLENBQUMsU0FBRCxFQUFZRixPQUFPLENBQUMsS0FBRCxDQUFQLElBQWtCQSxPQUFPLENBQUMsT0FBRCxDQUFyQyxDQUE1Qjs7QUFDQSxNQUFNTSxNQUFNLEdBQUdKLGVBQWUsQ0FBQyxXQUFELEVBQWNGLE9BQU8sQ0FBQyxRQUFELENBQVAsSUFBcUJBLE9BQU8sQ0FBQyxTQUFELENBQTVCLElBQTRDLGNBQWNPLE9BQU8sQ0FBQ0MsUUFBaEYsQ0FBOUI7O0FBQ0EsTUFBTUMsT0FBTyxHQUFHUCxlQUFlLENBQUMsWUFBRCxFQUFlLENBQUNJLE1BQWhCLENBQS9COztBQUNBLE1BQU1JLEdBQUcsR0FBR1IsZUFBZSxDQUFDLFFBQUQsRUFBVyxJQUFYLENBQTNCLEMsQ0FBNkM7OztBQUM3QyxNQUFNUyxLQUFLLEdBQUdULGVBQWUsQ0FBQyxVQUFELEVBQWEsSUFBYixDQUE3QixDLENBQWlEOzs7QUFDakQsTUFBTVUsR0FBRyxHQUFHVixlQUFlLENBQUMsUUFBRCxFQUFXRixPQUFPLENBQUMsS0FBRCxDQUFsQixDQUEzQixDLENBQ1A7OztBQUNPLE1BQU1hLE1BQU0sR0FBR1gsZUFBZSxDQUFDLFdBQUQsRUFBYyxDQUFDLEVBQUVGLE9BQU8sQ0FBQyxJQUFELENBQVAsS0FBa0JjLEVBQUUsQ0FBQ0MsaUJBQUgsSUFBd0JELEVBQUUsQ0FBQ0UsZUFBN0MsQ0FBRixDQUFmLENBQTlCOztBQUNBLE1BQU1DLFFBQVEsR0FBR2YsZUFBZSxDQUFDLGFBQUQsRUFBZ0IsS0FBaEIsQ0FBaEM7O0FBQ0EsTUFBTWdCLGFBQWEsR0FBR2hCLGVBQWUsQ0FBQyxrQkFBRCxFQUFxQixLQUFyQixDQUFyQzs7QUFDQSxNQUFNaUIsTUFBTSxHQUFHakIsZUFBZSxDQUFDLFdBQUQsRUFBYyxLQUFkLENBQTlCOztBQUNBLE1BQU1rQixNQUFNLEdBQUdsQixlQUFlLENBQUMsV0FBRCxFQUFjLEtBQWQsQ0FBOUI7O0FBQ0EsTUFBTW1CLFNBQVMsR0FBR25CLGVBQWUsQ0FBQyxjQUFELEVBQWlCLEtBQWpCLENBQWpDOztBQUNBLE1BQU1vQixLQUFLLEdBQUdwQixlQUFlLENBQUMsVUFBRCxFQUFhLEtBQWIsQ0FBN0I7O0FBQ0EsTUFBTXFCLFNBQVMsR0FBR3JCLGVBQWUsQ0FBQyxjQUFELEVBQWlCLEtBQWpCLENBQWpDOztBQUNBLE1BQU1zQixNQUFNLEdBQUd0QixlQUFlLENBQUMsV0FBRCxFQUFjLEtBQWQsQ0FBOUI7O0FBQ0EsTUFBTXVCLElBQUksR0FBR3ZCLGVBQWUsQ0FBQyxTQUFELEVBQVksS0FBWixDQUE1Qjs7QUFDQSxNQUFNd0IsSUFBSSxHQUFHeEIsZUFBZSxDQUFDLFNBQUQsRUFBWSxLQUFaLENBQTVCLEMsQ0FDUDs7O0FBQ08sTUFBTXlCLFdBQVcsR0FBR3pCLGVBQWUsQ0FBQyxnQkFBRCxFQUFvQixlQUFlLE9BQU8wQixXQUExQyxDQUFuQyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IF9nbG9iYWwgPSB0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJyA/IGdsb2JhbCA6IHdpbmRvdztcclxuXHJcbmZ1bmN0aW9uIGRlZmluZWQgKG5hbWU6IHN0cmluZykge1xyXG4gICAgcmV0dXJuIHR5cGVvZiBfZ2xvYmFsW25hbWVdID09PSAnb2JqZWN0JztcclxufVxyXG5cclxuZnVuY3Rpb24gdHJ5RGVmaW5lR2xvYmFsIChuYW1lOiBzdHJpbmcsIHZhbHVlOiBib29sZWFuKTogYm9vbGVhbiB7XHJcbiAgICBpZiAodHlwZW9mIF9nbG9iYWxbbmFtZV0gPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgcmV0dXJuIChfZ2xvYmFsW25hbWVdID0gdmFsdWUpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gX2dsb2JhbFtuYW1lXTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IEJVSUxEID0gdHJ5RGVmaW5lR2xvYmFsKCdDQ19CVUlMRCcsIGZhbHNlKTtcclxuZXhwb3J0IGNvbnN0IFRFU1QgPSB0cnlEZWZpbmVHbG9iYWwoJ0NDX1RFU1QnLCBkZWZpbmVkKCd0YXAnKSB8fCBkZWZpbmVkKCdRVW5pdCcpKTtcclxuZXhwb3J0IGNvbnN0IEVESVRPUiA9IHRyeURlZmluZUdsb2JhbCgnQ0NfRURJVE9SJywgZGVmaW5lZCgnRWRpdG9yJykgJiYgZGVmaW5lZCgncHJvY2VzcycpICYmICgnZWxlY3Ryb24nIGluIHByb2Nlc3MudmVyc2lvbnMpKTtcclxuZXhwb3J0IGNvbnN0IFBSRVZJRVcgPSB0cnlEZWZpbmVHbG9iYWwoJ0NDX1BSRVZJRVcnLCAhRURJVE9SKTtcclxuZXhwb3J0IGNvbnN0IERFViA9IHRyeURlZmluZUdsb2JhbCgnQ0NfREVWJywgdHJ1ZSk7IC8vIChDQ19FRElUT1IgJiYgIUNDX0JVSUxEKSB8fCBDQ19QUkVWSUVXIHx8IENDX1RFU1RcclxuZXhwb3J0IGNvbnN0IERFQlVHID0gdHJ5RGVmaW5lR2xvYmFsKCdDQ19ERUJVRycsIHRydWUpOyAvLyBDQ19ERVYgfHwgRGVidWcgQnVpbGRcclxuZXhwb3J0IGNvbnN0IEpTQiA9IHRyeURlZmluZUdsb2JhbCgnQ0NfSlNCJywgZGVmaW5lZCgnanNiJykpO1xyXG4vLyBAdHMtaWdub3JlXHJcbmV4cG9ydCBjb25zdCBXRUNIQVQgPSB0cnlEZWZpbmVHbG9iYWwoJ0NDX1dFQ0hBVCcsICEhKGRlZmluZWQoJ3d4JykgJiYgKHd4LmdldFN5c3RlbUluZm9TeW5jIHx8IHd4LmdldFNoYXJlZENhbnZhcykpKTtcclxuZXhwb3J0IGNvbnN0IE1JTklHQU1FID0gdHJ5RGVmaW5lR2xvYmFsKCdDQ19NSU5JR0FNRScsIGZhbHNlKTtcclxuZXhwb3J0IGNvbnN0IFJVTlRJTUVfQkFTRUQgPSB0cnlEZWZpbmVHbG9iYWwoJ0NDX1JVTlRJTUVfQkFTRUQnLCBmYWxzZSk7XHJcbmV4cG9ydCBjb25zdCBBTElQQVkgPSB0cnlEZWZpbmVHbG9iYWwoJ0NDX0FMSVBBWScsIGZhbHNlKTtcclxuZXhwb3J0IGNvbnN0IFhJQU9NSSA9IHRyeURlZmluZUdsb2JhbCgnQ0NfWElBT01JJywgZmFsc2UpO1xyXG5leHBvcnQgY29uc3QgQllURURBTkNFID0gdHJ5RGVmaW5lR2xvYmFsKCdDQ19CWVRFREFOQ0UnLCBmYWxzZSk7XHJcbmV4cG9ydCBjb25zdCBCQUlEVSA9IHRyeURlZmluZUdsb2JhbCgnQ0NfQkFJRFUnLCBmYWxzZSk7XHJcbmV4cG9ydCBjb25zdCBDT0NPU1BMQVkgPSB0cnlEZWZpbmVHbG9iYWwoJ0NDX0NPQ09TUExBWScsIGZhbHNlKTtcclxuZXhwb3J0IGNvbnN0IEhVQVdFSSA9IHRyeURlZmluZUdsb2JhbCgnQ0NfSFVBV0VJJywgZmFsc2UpO1xyXG5leHBvcnQgY29uc3QgT1BQTyA9IHRyeURlZmluZUdsb2JhbCgnQ0NfT1BQTycsIGZhbHNlKTtcclxuZXhwb3J0IGNvbnN0IFZJVk8gPSB0cnlEZWZpbmVHbG9iYWwoJ0NDX1ZJVk8nLCBmYWxzZSk7XHJcbi8vIEB0cy1pZ25vcmVcclxuZXhwb3J0IGNvbnN0IFNVUFBPUlRfSklUID0gdHJ5RGVmaW5lR2xvYmFsKCdDQ19TVVBQT1JUX0pJVCcsICgnZnVuY3Rpb24nID09PSB0eXBlb2YgbG9hZFJ1bnRpbWUpKTtcclxuIl19