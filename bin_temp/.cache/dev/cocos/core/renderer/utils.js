(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "../gfx/index.js", "../gfx/define.js"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("../gfx/index.js"), require("../gfx/define.js"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.index, global.define);
    global.utils = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _index, _define) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.createIA = createIA;

  // Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.
  function createIA(device, data) {
    if (!data.positions) {
      console.error('The data must have positions field');
      return null;
    }

    var verts = [];
    var vcount = data.positions.length / 3;

    for (var i = 0; i < vcount; ++i) {
      verts.push(data.positions[3 * i], data.positions[3 * i + 1], data.positions[3 * i + 2]);

      if (data.normals) {
        verts.push(data.normals[3 * i], data.normals[3 * i + 1], data.normals[3 * i + 2]);
      }

      if (data.uvs) {
        verts.push(data.uvs[2 * i], data.uvs[2 * i + 1]);
      }

      if (data.colors) {
        verts.push(data.colors[3 * i], data.colors[3 * i + 1], data.colors[3 * i + 2]);
      }
    }

    var vfmt = [];
    vfmt.push(new _index.GFXAttribute(_define.GFXAttributeName.ATTR_POSITION, _define.GFXFormat.RGB32F));

    if (data.normals) {
      vfmt.push(new _index.GFXAttribute(_define.GFXAttributeName.ATTR_NORMAL, _define.GFXFormat.RGB32F));
    }

    if (data.uvs) {
      vfmt.push(new _index.GFXAttribute(_define.GFXAttributeName.ATTR_TEX_COORD, _define.GFXFormat.RG32F));
    }

    if (data.colors) {
      vfmt.push(new _index.GFXAttribute(_define.GFXAttributeName.ATTR_COLOR, _define.GFXFormat.RGB32F));
    }

    var vb = device.createBuffer(new _index.GFXBufferInfo(_define.GFXBufferUsageBit.VERTEX | _define.GFXBufferUsageBit.TRANSFER_DST, _define.GFXMemoryUsageBit.HOST | _define.GFXMemoryUsageBit.DEVICE, verts.length * 4, verts.length * 4 / vcount));
    vb.update(new Float32Array(verts));
    var ib = null;

    if (data.indices) {
      ib = device.createBuffer(new _index.GFXBufferInfo(_define.GFXBufferUsageBit.INDEX | _define.GFXBufferUsageBit.TRANSFER_DST, _define.GFXMemoryUsageBit.HOST | _define.GFXMemoryUsageBit.DEVICE, data.indices.length * 2, 2));
      ib.update(new Uint16Array(data.indices));
    }

    return device.createInputAssembler(new _index.GFXInputAssemblerInfo(vfmt, [vb], ib));
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImU6L2QwMDQ1MjUyMC9HaXRodWIvZW5naW5lL2NvY29zL2NvcmUvcmVuZGVyZXIvdXRpbHMudHMiXSwibmFtZXMiOlsiY3JlYXRlSUEiLCJkZXZpY2UiLCJkYXRhIiwicG9zaXRpb25zIiwiY29uc29sZSIsImVycm9yIiwidmVydHMiLCJ2Y291bnQiLCJsZW5ndGgiLCJpIiwicHVzaCIsIm5vcm1hbHMiLCJ1dnMiLCJjb2xvcnMiLCJ2Zm10IiwiR0ZYQXR0cmlidXRlIiwiR0ZYQXR0cmlidXRlTmFtZSIsIkFUVFJfUE9TSVRJT04iLCJHRlhGb3JtYXQiLCJSR0IzMkYiLCJBVFRSX05PUk1BTCIsIkFUVFJfVEVYX0NPT1JEIiwiUkczMkYiLCJBVFRSX0NPTE9SIiwidmIiLCJjcmVhdGVCdWZmZXIiLCJHRlhCdWZmZXJJbmZvIiwiR0ZYQnVmZmVyVXNhZ2VCaXQiLCJWRVJURVgiLCJUUkFOU0ZFUl9EU1QiLCJHRlhNZW1vcnlVc2FnZUJpdCIsIkhPU1QiLCJERVZJQ0UiLCJ1cGRhdGUiLCJGbG9hdDMyQXJyYXkiLCJpYiIsImluZGljZXMiLCJJTkRFWCIsIlVpbnQxNkFycmF5IiwiY3JlYXRlSW5wdXRBc3NlbWJsZXIiLCJHRlhJbnB1dEFzc2VtYmxlckluZm8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFNTyxXQUFTQSxRQUFULENBQW1CQyxNQUFuQixFQUFzQ0MsSUFBdEMsRUFBdUQ7QUFDMUQsUUFBSSxDQUFDQSxJQUFJLENBQUNDLFNBQVYsRUFBcUI7QUFDakJDLE1BQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUFjLG9DQUFkO0FBQ0EsYUFBTyxJQUFQO0FBQ0g7O0FBRUQsUUFBTUMsS0FBZSxHQUFHLEVBQXhCO0FBQ0EsUUFBTUMsTUFBTSxHQUFHTCxJQUFJLENBQUNDLFNBQUwsQ0FBZUssTUFBZixHQUF3QixDQUF2Qzs7QUFFQSxTQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdGLE1BQXBCLEVBQTRC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QywwQkFBa0JDLElBQWxCLEdBQXlCRCwwQkFBa0JFLE1BRnRCLEVBR3JCOUIsSUFBSSxDQUFDa0MsT0FBTCxDQUFhNUIsTUFBYixHQUFzQixDQUhELEVBSXJCLENBSnFCLENBQXBCLENBQUw7QUFPQTJCLE1BQUFBLEVBQUUsQ0FBQ0YsTUFBSCxDQUFVLElBQUlLLFdBQUosQ0FBZ0JwQyxJQUFJLENBQUNrQyxPQUFyQixDQUFWO0FBQ0g7O0FBRUQsV0FBT25DLE1BQU0sQ0FBQ3NDLG9CQUFQLENBQTRCLElBQUlDLDRCQUFKLENBQTBCMUIsSUFBMUIsRUFBZ0MsQ0FBQ1UsRUFBRCxDQUFoQyxFQUFzQ1csRUFBdEMsQ0FBNUIsQ0FBUDtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDE3LTIwMTggWGlhbWVuIFlhamkgU29mdHdhcmUgQ28uLCBMdGQuXHJcblxyXG5pbXBvcnQgeyBHRlhBdHRyaWJ1dGUsIEdGWEJ1ZmZlciwgR0ZYQnVmZmVySW5mbywgR0ZYRGV2aWNlLCBHRlhJbnB1dEFzc2VtYmxlckluZm8gfSBmcm9tICcuLi9nZngnO1xyXG5pbXBvcnQgeyBHRlhBdHRyaWJ1dGVOYW1lLCBHRlhCdWZmZXJVc2FnZUJpdCwgR0ZYRm9ybWF0LCBHRlhNZW1vcnlVc2FnZUJpdCB9IGZyb20gJy4uL2dmeC9kZWZpbmUnO1xyXG5pbXBvcnQgeyBJR2VvbWV0cnkgfSBmcm9tICcuLi9wcmltaXRpdmUvZGVmaW5lJztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJQSAoZGV2aWNlOiBHRlhEZXZpY2UsIGRhdGE6IElHZW9tZXRyeSkge1xyXG4gICAgaWYgKCFkYXRhLnBvc2l0aW9ucykge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ1RoZSBkYXRhIG11c3QgaGF2ZSBwb3NpdGlvbnMgZmllbGQnKTtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB2ZXJ0czogbnVtYmVyW10gPSBbXTtcclxuICAgIGNvbnN0IHZjb3VudCA9IGRhdGEucG9zaXRpb25zLmxlbmd0aCAvIDM7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB2Y291bnQ7ICsraSkge1xyXG4gICAgICAgIHZlcnRzLnB1c2goZGF0YS5wb3NpdGlvbnNbMyAqIGldLCBkYXRhLnBvc2l0aW9uc1szICogaSArIDFdLCBkYXRhLnBvc2l0aW9uc1szICogaSArIDJdKTtcclxuXHJcbiAgICAgICAgaWYgKGRhdGEubm9ybWFscykge1xyXG4gICAgICAgICAgICB2ZXJ0cy5wdXNoKGRhdGEubm9ybWFsc1szICogaV0sIGRhdGEubm9ybWFsc1szICogaSArIDFdLCBkYXRhLm5vcm1hbHNbMyAqIGkgKyAyXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChkYXRhLnV2cykge1xyXG4gICAgICAgICAgICB2ZXJ0cy5wdXNoKGRhdGEudXZzWzIgKiBpXSwgZGF0YS51dnNbMiAqIGkgKyAxXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChkYXRhLmNvbG9ycykge1xyXG4gICAgICAgICAgICB2ZXJ0cy5wdXNoKGRhdGEuY29sb3JzWzMgKiBpXSwgZGF0YS5jb2xvcnNbMyAqIGkgKyAxXSwgZGF0YS5jb2xvcnNbMyAqIGkgKyAyXSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHZmbXQ6IEdGWEF0dHJpYnV0ZVtdID0gW107XHJcbiAgICB2Zm10LnB1c2gobmV3IEdGWEF0dHJpYnV0ZShHRlhBdHRyaWJ1dGVOYW1lLkFUVFJfUE9TSVRJT04sIEdGWEZvcm1hdC5SR0IzMkYpKTtcclxuICAgIGlmIChkYXRhLm5vcm1hbHMpIHtcclxuICAgICAgICB2Zm10LnB1c2gobmV3IEdGWEF0dHJpYnV0ZShHRlhBdHRyaWJ1dGVOYW1lLkFUVFJfTk9STUFMLCBHRlhGb3JtYXQuUkdCMzJGKSk7XHJcbiAgICB9XHJcbiAgICBpZiAoZGF0YS51dnMpIHtcclxuICAgICAgICB2Zm10LnB1c2gobmV3IEdGWEF0dHJpYnV0ZShHRlhBdHRyaWJ1dGVOYW1lLkFUVFJfVEVYX0NPT1JELCBHRlhGb3JtYXQuUkczMkYpKTtcclxuICAgIH1cclxuICAgIGlmIChkYXRhLmNvbG9ycykge1xyXG4gICAgICAgIHZmbXQucHVzaChuZXcgR0ZYQXR0cmlidXRlKEdGWEF0dHJpYnV0ZU5hbWUuQVRUUl9DT0xPUiwgR0ZYRm9ybWF0LlJHQjMyRikpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHZiID0gZGV2aWNlLmNyZWF0ZUJ1ZmZlcihuZXcgR0ZYQnVmZmVySW5mbyhcclxuICAgICAgICBHRlhCdWZmZXJVc2FnZUJpdC5WRVJURVggfCBHRlhCdWZmZXJVc2FnZUJpdC5UUkFOU0ZFUl9EU1QsXHJcbiAgICAgICAgR0ZYTWVtb3J5VXNhZ2VCaXQuSE9TVCB8IEdGWE1lbW9yeVVzYWdlQml0LkRFVklDRSxcclxuICAgICAgICB2ZXJ0cy5sZW5ndGggKiA0LFxyXG4gICAgICAgIHZlcnRzLmxlbmd0aCAqIDQgLyB2Y291bnQsXHJcbiAgICApKTtcclxuXHJcbiAgICB2Yi51cGRhdGUobmV3IEZsb2F0MzJBcnJheSh2ZXJ0cykpO1xyXG5cclxuICAgIGxldCBpYjogR0ZYQnVmZmVyIHwgbnVsbCA9IG51bGw7XHJcbiAgICBpZiAoZGF0YS5pbmRpY2VzKSB7XHJcbiAgICAgICAgaWIgPSBkZXZpY2UuY3JlYXRlQnVmZmVyKG5ldyBHRlhCdWZmZXJJbmZvKFxyXG4gICAgICAgICAgICBHRlhCdWZmZXJVc2FnZUJpdC5JTkRFWCB8IEdGWEJ1ZmZlclVzYWdlQml0LlRSQU5TRkVSX0RTVCxcclxuICAgICAgICAgICAgR0ZYTWVtb3J5VXNhZ2VCaXQuSE9TVCB8IEdGWE1lbW9yeVVzYWdlQml0LkRFVklDRSxcclxuICAgICAgICAgICAgZGF0YS5pbmRpY2VzLmxlbmd0aCAqIDIsXHJcbiAgICAgICAgICAgIDIsXHJcbiAgICAgICAgKSk7XHJcblxyXG4gICAgICAgIGliLnVwZGF0ZShuZXcgVWludDE2QXJyYXkoZGF0YS5pbmRpY2VzKSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGRldmljZS5jcmVhdGVJbnB1dEFzc2VtYmxlcihuZXcgR0ZYSW5wdXRBc3NlbWJsZXJJbmZvKHZmbXQsIFt2Yl0sIGliKSk7XHJcbn1cclxuIl19